/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.6.2/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application
    id 'application'
}

ext.hostname = {
    return System.getProperty("hostname") ?: "localhost"
}

ext.freshnessPeriod = {
    return System.getProperty("freshnessPeriod") ?: 60 * 1000
}

ext.UDUPHostname = {
    return System.getProperty("hostname") ?: "localhost"
}

ext.port = {
    return System.getProperty("port") ?: 5999;
}

ext.timeout = {
    return System.getProperty("timeout") ?: 5000;
}

ext.bufsize = {
    return System.getProperty("bufsize") ?: 512;
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:28.0-jre'

    implementation 'org.springframework.boot:spring-boot-starter-web:2.2.1.RELEASE'

    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:2.2.1.RELEASE'

    implementation 'org.springframework.boot:spring-boot-starter-test:2.2.1.RELEASE'

    implementation 'org.apache.commons:commons-math3:3.6.1'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'

    implementation 'com.esotericsoftware:kryo:4.0.2'

    // For query language parser
    implementation files('./lib/JLex.jar')
    implementation files('./lib/cup.jar')

    implementation 'com.google.code.gson:gson:2.8.6'
}

application {
    // Define the main class for the application
    mainClassName = 'pl.edu.mimuw.cloudatlas.interpreter.Main'
}

task runAgent(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'pl.edu.mimuw.cloudatlas.agent.Agent'
    systemProperty 'java.rmi.server.hostname', hostname()
    systemProperty 'freshness_period', freshnessPeriod()
    systemProperty 'UDUPServer.hostname', UDUPHostname()
    systemProperty 'UDUPServer.port', port()
    systemProperty 'UDUPServer.timeout', port()
    systemProperty 'UDUPServer.bufsize', port()
}

task runClient(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'pl.edu.mimuw.cloudatlas.client.Client'
    systemProperty 'agent_hostname', hostname()
}

task runFetcher(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'pl.edu.mimuw.cloudatlas.fetcher.Fetcher'
    args(hostname() , 1099)
}

task runInterpreter(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'pl.edu.mimuw.cloudatlas.interpreter.Main'
    standardInput = System.in
}
